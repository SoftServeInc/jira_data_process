// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Checkboxes /> renders Checkboxes component 1`] = `
<Fragment>
  <styled.div>
    <WithStyles(ForwardRef(Typography))
      align="center"
      gutterBottom={true}
      variant="h6"
    >
      If you want, you can configure fields, data from which will be saved in your source file!
    </WithStyles(ForwardRef(Typography))>
  </styled.div>
  <WithStyles(ForwardRef(Typography))
    align="center"
    gutterBottom={true}
    variant="h6"
  >
    Required fields
  </WithStyles(ForwardRef(Typography))>
  <styled.div>
    <WithStyles(ForwardRef(FormGroup))>
      <WithStyles(ForwardRef(FormControlLabel))
        control={
          <ForwardRef(WithStyles)
            checked={true}
            color="primary"
            disabled={false}
            name="unblockChecked"
            onChange={[Function]}
          />
        }
        label="Do you want to configure required fields?"
      />
    </WithStyles(ForwardRef(FormGroup))>
  </styled.div>
  <styled.div
    className="required-checkboxes"
  >
    <div>
      <WithStyles(ForwardRef(FormGroup))
        row={true}
      >
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="keyChecked"
              onChange={[Function]}
            />
          }
          label="Key"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="issueTypeChecked"
              onChange={[Function]}
            />
          }
          label="Issue Type"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="summaryChecked"
              onChange={[Function]}
            />
          }
          label="Summary"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="assigneeChecked"
              onChange={[Function]}
            />
          }
          label="Assignee"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="storyPointsChecked"
              onChange={[Function]}
            />
          }
          label="Story points"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="statusChecked"
              onChange={[Function]}
            />
          }
          label="Status"
        />
      </WithStyles(ForwardRef(FormGroup))>
    </div>
  </styled.div>
  <styled.div>
    <WithStyles(ForwardRef(Typography))
      align="center"
      gutterBottom={true}
      variant="h6"
    >
      Optional fields
    </WithStyles(ForwardRef(Typography))>
  </styled.div>
  <styled.div>
    <div>
      <WithStyles(ForwardRef(FormGroup))
        row={true}
      >
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="reporterChecked"
              onChange={[Function]}
            />
          }
          label="Reporter"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="labelsChecked"
              onChange={[Function]}
            />
          }
          label="Labels"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="priorityChecked"
              onChange={[Function]}
            />
          }
          label="Priority"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="subtasksCountChecked"
              onChange={[Function]}
            />
          }
          label="Subtasks count"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="updatedDateChecked"
              onChange={[Function]}
            />
          }
          label="Updated date"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="componentsChecked"
              onChange={[Function]}
            />
          }
          label="Components"
        />
        <WithStyles(ForwardRef(FormControlLabel))
          control={
            <ForwardRef(WithStyles)
              checked={true}
              disabled={false}
              name="fixVersionsChecked"
              onChange={[Function]}
            />
          }
          label="Fix versions"
        />
      </WithStyles(ForwardRef(FormGroup))>
    </div>
  </styled.div>
  <styled.div>
    <WithStyles(ForwardRef(FormGroup))>
      <WithStyles(ForwardRef(FormControlLabel))
        control={
          <ForwardRef(WithStyles)
            checked={false}
            name="agreeChecked"
            onChange={[Function]}
          />
        }
        label="Are you agree with current configuration?"
      />
    </WithStyles(ForwardRef(FormGroup))>
  </styled.div>
</Fragment>
`;
